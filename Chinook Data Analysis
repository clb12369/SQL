# This project is the final course SQL project for the Break into Tech Course.
# The project utilizes the Chinook database provided for the course.

# SQL Queries:

-- 1. Which customers (their full names, customer ID, and country) are not in the US? 
SELECT
FirstName,
LastName,
CustomerId,
Country
FROM customers
WHERE Country <> 'USA';

-- 2.  Which customers are from Brazil?
SELECT
FirstName,
LastName,
CustomerId,
Country
FROM customers
WHERE Country = 'Brazil';

-- 3. Which customers are from South America?
SELECT
FirstName,
LastName,
CustomerId,
Country
FROM customers
WHERE Country IN ('Brazil', 'Argentina', 'Chile');

--4. Which invoices are for customers from Brazil (full name, invoice ID, date of the invoice, and billing country)?
SELECT
cust.FirstName || ' ' ||cust.LastName AS CustomerName,
inv.InvoiceId,
inv.InvoiceDate,
inv.BillingCountry
FROM customers AS cust
INNER JOIN invoices AS inv ON cust.CustomerId = inv.CustomerId
WHERE cust.Country = 'Brazil';

-- 5. Which of the employees are Sales Agents?
SELECT
*
FROM employees
WHERE Title LIKE '%Sales%Agent%';

-- 6. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT
BillingCountry
FROM invoices;

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT
customers.CustomerId,
customers.FirstName || ' ' || customers.LastName AS CustomerName,
SUM(invoices.Total) AS InvoiceTotal,
customers.Country,
employees.FirstName || ' ' || employees.LastName AS SalesAgentName
FROM customers
INNER JOIN invoices ON customers.CustomerId = invoices.CustomerId
INNER JOIN employees ON customers.SupportRepId = employees.EmployeeId
GROUP BY customers.CustomerId;

-- 8. How many Invoices were there in 2009?
SELECT
COUNT(*) as NumInvoices
FROM invoices
WHERE InvoiceDate LIKE '2009%'; 

-- 9. How many Invoices were there in 2009?
SELECT
COUNT(*) as NumInvoices
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'; 

-- 10. What were the total sales for 2009?
SELECT
ROUND(SUM(Total), 2) as TotalSales
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- 11. Show the purchased track(s) associated with each invoice line ID.
SELECT
Name,
InvoiceLineId
FROM tracks
INNER JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
ORDER BY InvoiceLineId;

-- 12. Show the purchased track(s) and artist name associated with each invoice line ID.
SELECT
invoice_items.InvoiceLineId,
tracks.Name,
IFNULL(tracks.Composer, 'Artist Unknown')
FROM invoice_items
INNER JOIN tracks ON invoice_items.TrackId = tracks.TrackId
ORDER BY InvoiceLineId;

-- 13. What are the total sales made by each sales agent?
SELECT
ROUND(SUM(invoices.Total), 2) AS TotalSales,
employees.FirstName || ' ' || employees.LastName AS SalesAgentName,
employees.EmployeeId
FROM employees 
INNER JOIN customers ON employees.EmployeeId = customers.SupportRepId
INNER JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.EmployeeId;

